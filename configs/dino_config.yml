model_parameter:
  in_chans: 3
  num_classes: 0
  pretrained: True

loss_parameter: {}
early_stopping_parameter:
  min_delta: 0.005
  patience: 5
  warm_up: 40

lr_scheduler_parameter:
  decay_rate: 0.5
  patience_t: 500
  verbose: False
  cooldown_t: 500
  warmup_t: 250
  mode: 'min'

dataset:
  image_resolution: 256

augmentor_parameter:
  n_global_crops: 2
  n_local_crops: 5
  global_crops_scale: !!python/tuple [ 0.5, 1. ]
  local_crops_scale: !!python/tuple [ 0.1, 0.5 ]

data_loader_parameter:
  persistent_workers: True
  shuffle: True  # only train
  drop_last: True  # only train
  batch_size: 256
  num_workers: 12

optimizer_parameter:
  lr: 0.0001
  weight_decay: 0.05

gym:
  n_trainings_epochs: 750
  eval_frequency: 500
  model_saving_frequency: 100

wandb_parameter:
  project: name
  entity:
  save_code: True

classifier:
    SVC:
        class_weight: 'balanced'
        C: 1
        gamma: 'scale'
        cache_size: 10000
        max_iter: -1
        probability: True
        break_ties: True
        kernel: 'rbf'
    LogisticRegression:
        class_weight: 'balanced'
        C: 2.5
        max_iter: 10000
        n_jobs: -1

    KNeighborsClassifier:
      n_jobs: -1
      weights: 'distance'
      n_neighbors: 3


eval_class_sizes: [1,5, 10, 25, 50, 100, 250, 500,750,1000,1500,2000]
n_iterations: 100


